# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11f7eP_2E9r4_9E4OGaQtr80-s8oThR4L
"""

# 必要なライブラリ
import openpyxl
from datetime import datetime, timedelta
import pytz
import os
from IPython.display import display
import ipywidgets as widgets
from google.colab import files

# Excelファイル初期化
FILENAME = 'kintai.xlsx'
if not os.path.exists(FILENAME):
    wb = openpyxl.Workbook()
    ws = wb.active
    ws.title = 'Kintai'
    ws.append(['氏名', '日付', '出勤時刻', '退勤時刻', '勤務時間'])
    wb.save(FILENAME)

# 勤怠記録関数
def record_attendance(name, status, output_label):
    jst = pytz.timezone('Asia/Tokyo')
    now = datetime.now(jst)
    date_str = now.strftime('%Y-%m-%d')
    time_str = now.strftime('%H:%M:%S')

    wb = openpyxl.load_workbook(FILENAME)
    ws = wb['Kintai']

    msg = ""

    if status == 'in':
        ws.append([name, date_str, time_str, '', ''])
        msg = f"{name} さんの出勤を記録しました（{time_str}）"

    elif status == 'out':
        for row in reversed(ws.iter_rows(min_row=2, values_only=False)):
            if row[0].value == name and row[1].value == date_str and row[3].value == '':
                row[3].value = time_str
                try:
                    in_time = datetime.combine(now.date(), datetime.strptime(row[2].value, '%H:%M:%S').time())
                    out_time = datetime.combine(now.date(), datetime.strptime(time_str, '%H:%M:%S').time())

                    if out_time < in_time:
                        out_time += timedelta(days=1)

                    duration = out_time - in_time
                    hours, remainder = divmod(duration.total_seconds(), 3600)
                    minutes, _ = divmod(remainder, 60)
                    work_time_str = f"{int(hours)}時間{int(minutes)}分"
                    row[4].value = work_time_str
                    msg = f"{name} さんの退勤を記録しました（{time_str}｜{work_time_str}）"
                    break
                except ValueError:
                    msg = "時間のフォーマットが不正です"
                    break
        else:
            msg = "退勤対象が見つかりません"

    wb.save(FILENAME)
    output_label.value = msg

# ウィジェットUI
name_input = widgets.Text(description='氏名：')
output_label = widgets.Label(value="")

# ✅ 色付きボタン：出勤＝赤、退勤＝青
in_button = widgets.Button(description='出勤', button_style='danger')  # 赤
out_button = widgets.Button(description='退勤', button_style='info')  # 青
download_button = widgets.Button(description='Excelをダウンロード')

# ボタン動作
def in_click(b):
    name = name_input.value.strip()
    if name == "":
        output_label.value = "氏名を入力してください"
    else:
        record_attendance(name, 'in', output_label)

def out_click(b):
    name = name_input.value.strip()
    if name == "":
        output_label.value = "氏名を入力してください"
    else:
        record_attendance(name, 'out', output_label)

def download_excel(b):
    files.download(FILENAME)

in_button.on_click(in_click)
out_button.on_click(out_click)
download_button.on_click(download_excel)

# UI表示
display(name_input, in_button, out_button, output_label, download_button)